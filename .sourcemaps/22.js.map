{"version":3,"sources":["../../src/pages/mode-setting/mode-setting.module.ts","../../src/pages/mode-setting/mode-setting.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAAyC;AACO;AACC;AAUjD;IAAA;IAAoC,CAAC;IAAxB,qBAAqB;QARjC,+DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,sEAAe;aAChB;YACD,OAAO,EAAE;gBACP,8DAAe,CAAC,QAAQ,CAAC,sEAAe,CAAC;aAC1C;SACF,CAAC;OACW,qBAAqB,CAAG;IAAD,4BAAC;CAAA;AAAH;;;;;;;;;;;;;;;;;;;;;;;ACZQ;AACgC;AACF;AAGd;AAE1D;;;;;GAKG;AAOH;IAME,yBAAmB,OAAsB,EAAS,SAAoB,EAC5D,MAA8B,EAC9B,SAA0B;QAFjB,YAAO,GAAP,OAAO,CAAe;QAAS,cAAS,GAAT,SAAS,CAAW;QAC5D,WAAM,GAAN,MAAM,CAAwB;QAC9B,cAAS,GAAT,SAAS,CAAiB;QAJpC,UAAK,GAAY,IAAI,CAAC;QAKpB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACvC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC;QACtC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC;QAC7B,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC;QACrC,CAAC;QACD,IAAI,CAAC,qBAAqB,EAAE,CAAC;IAC/B,CAAC;IACD,+CAAqB,GAArB;QAAA,iBAIC;QAHC,IAAI,CAAC,MAAM,CAAC,wBAAwB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,aAAG;YACxD,KAAI,CAAC,QAAQ,GAAG,GAAG,CAAC;QACtB,CAAC,CAAC,CAAC;IACL,CAAC;IACD,wCAAc,GAAd;IAEA,CAAC;IACD,0CAAgB,GAAhB;QAAA,iBASC;QARC,IAAI,IAAI,GAAQ,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;QAC1D,IAAI,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,+BAA+B,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;QAC9F,YAAY,CAAC,YAAY,CAAC,cAAI;YAC5B,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;gBACT,KAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACvB,CAAC;QACH,CAAC,CAAC,CAAC;QACH,YAAY,CAAC,OAAO,EAAE,CAAC;IACzB,CAAC;IACD,kCAAQ,GAAR;QAAA,iBAoBC;QAnBC,IAAI,UAAU,GAAG,EAAE,CAAC;QACpB,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,iBAAO;YAC3B,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,cAAI;gBACvB,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;oBACjB,UAAU,CAAC,IAAI,CAAC;wBACd,UAAU,EAAE,IAAI,CAAC,QAAQ;wBACzB,MAAM,EAAE,IAAI,CAAC,IAAI;qBAClB,CAAC,CAAC;gBACL,CAAC;YAEH,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC;QACrC,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC,IAAI,CAAC,aAAG;YACvD,EAAE,CAAC,CAAC,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC;gBAChB,2EAAQ,CAAC,YAAY,CAAC,aAAa,CAAC,KAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;gBAC7D,KAAI,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC;YACrB,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAtDU,eAAe;QAJ3B,gEAAS,CAAC;YACT,QAAQ,EAAE,mBAAmB;WACG;SACjC,CAAC;sGAOsE;YACpD,gEAAsB;YACnB,YAAe;OARzB,eAAe,CAwD3B;IAAD,CAAC;AAAA;SAxDY,eAAe,gB","file":"22.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { ModeSettingPage } from './mode-setting';\n\n@NgModule({\n  declarations: [\n    ModeSettingPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(ModeSettingPage),\n  ],\n})\nexport class ModeSettingPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/mode-setting/mode-setting.module.ts","import { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams, ModalController } from 'ionic-angular';\nimport { DeviceRequestsProvider } from '../../providers/tools/requests';\n// import { ModeDeviceSelectedSettingPage } from '../mode-device-selected-setting/mode-device-selected-setting';\nimport { deepCopy } from 'ionic-angular/umd/util/util';\nimport { Variable } from '../../providers/model/variable';\n\n/**\n * Generated class for the ModeSettingPage page.\n *\n * See https://ionicframework.com/docs/components/#navigation for more info on\n * Ionic pages and navigation.\n */\n\n@IonicPage()\n@Component({\n  selector: 'page-mode-setting',\n  templateUrl: 'mode-setting.html',\n})\nexport class ModeSettingPage {\n  modeID: string;\n  name: string;\n  dataList: any;\n  alarm: boolean = true;\n  mode: any;\n  constructor(public navCtrl: NavController, public navParams: NavParams,\n    private device: DeviceRequestsProvider,\n    private modalCtrl: ModalController) {\n    this.mode = this.navParams.get(\"mode\");\n    this.modeID = this.mode.F_AgreementID;\n    this.name = this.mode.F_Name;\n    this.alarm = this.mode.F_SecurityRun;\n    ;\n    this.getModeDeviceDataList();\n  }\n  getModeDeviceDataList() {\n    this.device.GetDeviceModeDetailDatas(this.modeID).then(res => {\n      this.dataList = res;\n    });\n  }\n  ionViewDidLoad() {\n\n  }\n  presentShowModal() {\n    let data: any = JSON.parse(JSON.stringify(this.dataList));\n    let profileModal = this.modalCtrl.create('ModeDeviceSelectedSettingPage', { dataList: data });\n    profileModal.onDidDismiss(data => {\n      if (data) {\n        this.dataList = data;\n      }\n    });\n    profileModal.present();\n  }\n  saveMode() {\n    let paramsData = [];\n    this.dataList.forEach(element => {\n      element.data.forEach(data => {\n        if (data.Control) {\n          paramsData.push({\n            F_DeviceID: data.DeviceID,\n            F_Open: data.Open\n          });\n        }\n\n      });\n    });\n    this.mode.F_SecurityRun = this.alarm;\n    this.device.setModeDetail(this.mode, paramsData).then(res => {\n      if (res == true) {\n        Variable.socketObject.setModeDetail(this.mode.F_AgreementID);\n        this.navCtrl.pop();\n      }\n    });\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/mode-setting/mode-setting.ts"],"sourceRoot":""}