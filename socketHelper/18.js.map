{"version":3,"sources":["../../src/pages/roomdevice/roomdevice.module.ts","../../src/pages/roomdevice/roomdevice.ts"],"names":[],"mappings":"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","file":"18.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { RoomdevicePage } from './roomdevice';\n\n@NgModule({\n  declarations: [\n    RoomdevicePage,\n  ],\n  imports: [\n    IonicPageModule.forChild(RoomdevicePage),\n  ],\n})\nexport class RoomdevicePageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/roomdevice/roomdevice.module.ts","import { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams, Events } from 'ionic-angular';\nimport { DeviceRequestsProvider } from '../../providers/tools/requests';\nimport { Variable } from '../../providers/model/variable';\n// import { WellpumpPage } from '../wellpump/wellpump';\n// import { CurtainSettingPage } from '../device-setting/curtain-setting/curtain-setting';\n// import { DoorSettingPage } from '../device-setting/door-setting/door-setting';\n// import { LiftSettingPage } from '../device-setting/lift-setting/lift-setting';\n// import { PumpEastnorthpoolSettingPage } from '../device-setting/pump-eastnorthpool-setting/pump-eastnorthpool-setting';\n// import { PumpNorthcourtSettingPage } from '../device-setting/pump-northcourt-setting/pump-northcourt-setting';\n// import { ValveEastcourtSettingPage } from '../device-setting/valve-eastcourt-setting/valve-eastcourt-setting';\n// import { ValveEastnorthpoolSettingPage } from '../device-setting/valve-eastnorthpool-setting/valve-eastnorthpool-setting';\n/**\n\n/**\n * Generated class for the RoomdevicePage page.\n *\n * See https://ionicframework.com/docs/components/#navigation for more info on\n * Ionic pages and navigation.\n */\n\n@IonicPage()\n@Component({\n  selector: 'page-roomdevice',\n  templateUrl: 'roomdevice.html',\n})\nexport class RoomdevicePage {\n  roomID: any;\n  roomName: any;\n  deviceDataListShow: any = [];\n  stateData: any;\n  auto: boolean;\n  isType: boolean;\n  sumNumOpen: number = 0;\n  stateAir: object = {};\n  stateCommon: object = {};\n\n  constructor(\n    public navCtrl: NavController,\n    public navParams: NavParams,\n    private device: DeviceRequestsProvider,\n    private events: Events) {\n    this.roomID = this.navParams.get('id');\n    this.roomName = this.navParams.get('name');\n    this.isType = this.navParams.get('isType');\n    if (this.isType) {\n      this.device.getDeviceDataListByTypeID(this.roomID).then(res => {\n        this.deviceDataListShow = res;\n        this.initFn51();\n      });\n    } else {\n      this.device.getDeviceDataListByRoomID(this.roomID).then(res => {\n        this.deviceDataListShow = res;\n        this.initFn51();\n\n      });\n    }\n\n    this.auto = Variable.isAuto;\n\n    this.events.subscribe(\"FnData:isAuto\", this.eventsIsAutoHandler);\n  }\n  eventsIsAutoHandler = (data: any) => {\n    this.auto = data;\n  };\n  initFn51() {\n    let fn51Data = Variable.GetFnData('state');\n    this.fn51handler(fn51Data);\n    this.events.subscribe(\"FnData:state\", this.fn51handler);\n  }\n  fn51handler = (data: object) => {\n    // this.stateCommon = data;\n    this.getRoomDeviceState(data);\n  }\n  getRoomDeviceState(data: any) {\n    let result = {};\n    this.sumNumOpen = 0;\n    this.deviceDataListShow.forEach(element => {\n      let state = Boolean(data[element.F_ID][0]);\n      result[element.F_ID] = state;\n      if (state) this.sumNumOpen++;\n    });\n\n    this.stateData = result;\n  }\n  ionViewDidLoad() {\n\n  }\n  ionViewWillEnter() {\n\n\n  }\n  ionViewWillUnload() {\n    this.events.unsubscribe(\"FnData:state\", this.fn51handler);\n    this.events.unsubscribe(\"FnData:isAuto\", this.eventsIsAutoHandler);\n\n  }\n  goSetting(data: any) {\n    if (data.F_ShowSetting) {\n      let page: any;\n      switch (data['F_SettingRouter']) {\n        case \"setting_pump\": {\n          page = 'WellpumpPage'; break;\n        }\n        case \"setting_curtain\": {\n          page = 'CurtainSettingPage'; break\n        }\n        case \"setting_smartdoor\": {\n          page = 'DoorSettingPage'; break\n        }\n        case \"setting-northPump\": {\n          page = 'PumpEastnorthpoolSettingPage'; break\n        }\n        case \"setting_pg\": {\n          page = 'PumpNorthcourtSettingPage'; break\n        }\n        case \"setting_dcf\": {\n          page = 'ValveEastcourtSettingPage'; break\n        }\n        case \"setting-eastNorthDCF\": {\n          page = 'ValveEastnorthpoolSettingPage'; break\n        }\n        case \"setting_lift\": {\n          page = 'LiftSettingPage'; break\n        }\n        default: {\n          page = data['F_SettingRouter']; break;\n        }\n      }\n      if (page) {\n        let params = {\n          id: data[\"F_ID\"],\n          name: data[\"F_Name\"],\n          data: data\n        };\n        this.navCtrl.push(page, params);\n      }\n    }\n  }\n  setDeviceState(id, name, state) {\n    Variable.socketObject.setDeviceState(id, name, state);\n  }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/roomdevice/roomdevice.ts"],"sourceRoot":""}